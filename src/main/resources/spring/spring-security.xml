<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/security
             http://www.springframework.org/schema/security/spring-security.xsd ">
    <http pattern="/resources/**" security="none"/>
    <http pattern="/webjars/**" security="none"/>

    <http pattern="/rest/**" use-expressions="true" name="restSecurityFilterChain" create-session="stateless">
        <http-basic/>
        <!-- <intercept-url pattern="/rest/admin/**" access="hasRole('ROLE_ADMIN')"/>-->
        <intercept-url pattern="/**" access="isAuthenticated()"/>
        <csrf disabled="true"/>
    </http>
    <http>
        <intercept-url pattern="/" access="permitAll()"/>
        <intercept-url pattern="/**/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/**" access="isAuthenticated()"/>
        <form-login login-page="/" default-target-url="/start"
                    authentication-failure-url="/login?error=true"
                    always-use-default-target="true"
                    login-processing-url="/spring_security_check"/>
        <logout logout-success-url="/login"/>
        <csrf disabled="true"/>
    </http>
    <authentication-manager>

        <authentication-provider user-service-ref="userService">


            <password-encoder ref="passwordEncoder"/>
            <!-- <jdbc-user-service data-source-ref="dataSource"
                                users-by-username-query="SELECT email, password, enabled FROM users WHERE email = ?"
                                authorities-by-username-query="SELECT email,role FROM users, roles
                                WHERE id = user_id AND email = ?"/>&ndash;&gt;-->


            <!--<user-service>
                <user name="User@ya.ru" password="{noop}user" authorities="ROLE_USER"/>
                <user name="Admin@gmail.com" password="{noop}admin" authorities="ROLE_ADMIN, ROLE_USER"/>
            </user-service>-->
        </authentication-provider>
    </authentication-manager>
    <beans:bean class="org.springframework.security.crypto.password.NoOpPasswordEncoder"
                id="passwordEncoder"/>
</beans:beans>